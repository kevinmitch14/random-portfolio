[{"/Users/kevinmitchell/CS_2020/randomportfoliogenerator/src/index.js":"1","/Users/kevinmitchell/CS_2020/randomportfoliogenerator/src/reportWebVitals.js":"2","/Users/kevinmitchell/CS_2020/randomportfoliogenerator/src/App.js":"3","/Users/kevinmitchell/CS_2020/randomportfoliogenerator/src/data.js":"4","/Users/kevinmitchell/CS_2020/randomportfoliogenerator/src/Results.js":"5","/Users/kevinmitchell/CS_2020/randomportfoliogenerator/src/Charts.js":"6","/Users/kevinmitchell/CS_2020/randomportfoliogenerator/src/Graphs/AccumGraph.js":"7","/Users/kevinmitchell/CS_2020/randomportfoliogenerator/src/Graphs/DailyGraph.js":"8","/Users/kevinmitchell/CS_2020/randomportfoliogenerator/src/Graphs/PortfolioGraphs.js":"9","/Users/kevinmitchell/CS_2020/randomportfoliogenerator/src/stockChart.js":"10","/Users/kevinmitchell/CS_2020/randomportfoliogenerator/src/StockChart.js":"11","/Users/kevinmitchell/CS_2020/randomportfoliogenerator/src/StockNews.js":"12"},{"size":500,"mtime":1606988081592,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1606988081593,"results":"15","hashOfConfig":"14"},{"size":2975,"mtime":1607868541157,"results":"16","hashOfConfig":"14"},{"size":55524,"mtime":1607546866501,"results":"17","hashOfConfig":"14"},{"size":2333,"mtime":1607781911719,"results":"18","hashOfConfig":"14"},{"size":358,"mtime":1607505395306,"results":"19","hashOfConfig":"14"},{"size":1011,"mtime":1607547109136,"results":"20","hashOfConfig":"14"},{"size":1216,"mtime":1607593625572,"results":"21","hashOfConfig":"14"},{"size":3303,"mtime":1607630149843,"results":"22","hashOfConfig":"14"},{"size":949,"mtime":1607791636908,"results":"23","hashOfConfig":"14"},{"size":1316,"mtime":1607803676857,"results":"24","hashOfConfig":"14"},{"size":1703,"mtime":1607805546273,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1a9rg31",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},"/Users/kevinmitchell/CS_2020/randomportfoliogenerator/src/index.js",[],["53","54"],"/Users/kevinmitchell/CS_2020/randomportfoliogenerator/src/reportWebVitals.js",[],"/Users/kevinmitchell/CS_2020/randomportfoliogenerator/src/App.js",["55","56","57","58"],"/Users/kevinmitchell/CS_2020/randomportfoliogenerator/src/data.js",[],"/Users/kevinmitchell/CS_2020/randomportfoliogenerator/src/Results.js",["59","60","61"],"import React from 'react'\nimport Charts from './Charts'\nimport PortfolioGraphs from './Graphs/PortfolioGraphs'\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\n\nconst Results = (props) => {\n    console.log(props.test)\n\n    let accumPercent = {}\n\n    const y = props.test.map((item) => {\n\n        return (\n            <>\n                <Accordion>\n                    <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1a-content\"\n                        id=\"panel1a-header\"\n                    >\n                        <Typography component={'span'} className={\"s\"}>{item.item.Symbol} - {item.item.Name}</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                        <Typography component={'span'} style={{ width: '100%' }}>\n                            <Charts data={item.res.data} />\n                        </Typography>\n                    </AccordionDetails>\n                </Accordion>\n            </>\n        )\n    })\n\n    const portfolio = props.test.map((item) => {\n        // console.log(item)\n        let oldPrice = item.res.data.o[0]\n        item.res.data.o.map((item1, index) => {\n            let diff = ((item.res.data.c[index] - oldPrice) / oldPrice) * 100\n            // console.log(diff)\n\n            if (index in accumPercent) {\n                let newValue = accumPercent[index] + diff\n                accumPercent[index] = newValue\n            } else {\n                accumPercent[index] = diff\n            }\n\n            oldPrice = item.res.data.c[index]\n\n        })\n    })\n\n    return (\n        <div>\n            {Object.keys(accumPercent).length > 0 ?\n                <PortfolioGraphs data={accumPercent}\n                    length={props.test.length} />\n\n                : null}\n\n            {/* {Object.keys(accumPercent).length > 0 ?\n                <PortfolioSummary data={accumPercent}\n                    length={props.test.length} />\n                : null} */}\n\n            {y}\n        </div>\n    )\n}\n\nexport default Results\n","/Users/kevinmitchell/CS_2020/randomportfoliogenerator/src/Charts.js",[],"/Users/kevinmitchell/CS_2020/randomportfoliogenerator/src/Graphs/AccumGraph.js",[],"/Users/kevinmitchell/CS_2020/randomportfoliogenerator/src/Graphs/DailyGraph.js",[],"/Users/kevinmitchell/CS_2020/randomportfoliogenerator/src/Graphs/PortfolioGraphs.js",[],"/Users/kevinmitchell/CS_2020/randomportfoliogenerator/src/stockChart.js",[],"/Users/kevinmitchell/CS_2020/randomportfoliogenerator/src/StockChart.js",[],"/Users/kevinmitchell/CS_2020/randomportfoliogenerator/src/StockNews.js",["62","63"],"import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\n\nconst StockNews = ({ query }) => {\n    const [stockNews, setStockNews] = useState([])\n    const [companyNews, setCompanyNews] = useState([])\n    const [detailedNews, setDetailedNews] = useState(false)\n\n    useEffect(() => {\n        const fetchNews = async () => {\n            axios.get(`https://finnhub.io/api/v1/news?category=general&token=bv4bhc748v6qpatdfb4g`)\n                .then(res => setStockNews(res.data))\n        }\n        fetchNews()\n    }, [])\n\n\n    useEffect(() => {\n        const fetchCompanyNews = async () => {\n            axios.get(`https://finnhub.io/api/v1/company-news?symbol=${query}&from=2020-10-30&to=${new Date().toISOString().slice(0, 10)}&token=bv4bhc748v6qpatdfb4g`)\n                .then(res => setCompanyNews(res.data))\n        }\n        fetchCompanyNews()\n    }, [query])\n\n    const newsFeed = stockNews.slice(0, 20).map((item) => {\n        return (\n            <div className=\"news-item\">\n                <span>{item.headline} - {item.source}</span>\n                <br></br>\n                <span>{item.summary}</span>\n            </div>\n        )\n    })\n\n\n    const companyNewsFeed = companyNews.slice(0, 20).map((item) => {\n        return (\n            <div className=\"news-item\">\n                <span>{item.headline} - {item.source}</span>\n                <br></br>\n                <span>{item.summary}</span>\n            </div>\n        )\n    })\n\n\n    return (\n        <div className=\"news-feed\">\n            <p>News</p>\n            {/* {newsFeed}\n            {companyNewsFeed} */}\n            {query !== \"\" ? companyNewsFeed : newsFeed}\n        </div>\n    )\n}\n\nexport default StockNews\n",{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":5,"column":8,"nodeType":"70","messageId":"71","endLine":5,"endColumn":17},{"ruleId":"68","severity":1,"message":"72","line":6,"column":8,"nodeType":"70","messageId":"71","endLine":6,"endColumn":18},{"ruleId":"68","severity":1,"message":"73","line":34,"column":9,"nodeType":"70","messageId":"71","endLine":34,"endColumn":21},{"ruleId":"68","severity":1,"message":"74","line":35,"column":9,"nodeType":"70","messageId":"71","endLine":35,"endColumn":20},{"ruleId":"68","severity":1,"message":"75","line":38,"column":11,"nodeType":"70","messageId":"71","endLine":38,"endColumn":20},{"ruleId":"76","severity":1,"message":"77","line":38,"column":45,"nodeType":"78","messageId":"79","endLine":38,"endColumn":47},{"ruleId":"76","severity":1,"message":"77","line":41,"column":44,"nodeType":"78","messageId":"79","endLine":41,"endColumn":46},{"ruleId":"68","severity":1,"message":"80","line":7,"column":12,"nodeType":"70","messageId":"71","endLine":7,"endColumn":24},{"ruleId":"68","severity":1,"message":"81","line":7,"column":26,"nodeType":"70","messageId":"71","endLine":7,"endColumn":41},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'StockNews' is defined but never used.","Identifier","unusedVar","'StockChart' is defined but never used.","'stockHandler' is assigned a value but never used.","'stockSubmit' is assigned a value but never used.","'portfolio' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'detailedNews' is assigned a value but never used.","'setDetailedNews' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]